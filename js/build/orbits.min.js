(function() {
    var m, q, n, p, r, j = [],
        e;
    (function() {
        m = function(b) {
            e = b.settings.earth;
            m.setEarthMass(e.m);
            m.UI = p(b.ui);
            m.Renderer = q(b.renderer);
            m.Physics = n(b.physics);
            document.getElementById("DEBUG");
            return m
        };
        m.setEarthMass = function(b) { e.m = b * 1E11 }
    })();
    (function() {
        function b(a) {
            if (a.x !== undefined && a.y !== undefined && a.radius !== undefined) {
                d.beginPath();
                d.arc(a.x, a.y, a.radius, 0, Math.PI * 2, true);
                if (a.strokeStyle !== undefined) {
                    d.strokeStyle = a.strokeStyle;
                    d.stroke()
                }
                if (a.fillStyle !== undefined) {
                    d.fillStyle = a.fillStyle;
                    d.fill()
                }
            }
        }
        var d, f, g = false;
        q = function(a) {
            d = p.canvas.getContext("2d");
            f = new Image;
            f.src = a.earthimg;
            f.onload = function() { g = true };
            return q
        };
        q.redraw = function() {
            d.clearRect(0, 0, p.canvas.width, p.canvas.height);
            for (var a in j) j[a].draw();
            g === false ? b({ x: e.x, y: e.y, radius: e.r, strokeStyle: "#00FF00", fillStyle: "#00FF00" }) : d.drawImage(f, e.x - f.width / 2, e.y - f.height / 2)
        };
        q.drawSatellite = function(a) {
            for (var h = a.xpoints, o = a.ypoints, u = a.colors, t = a.c, k = h.length - 1; k > -1; k -= 10) t !== undefined ? b({ x: h[k], y: o[k], radius: 1.25, fillStyle: t }) :
                b({ x: h[k], y: o[k], radius: 1.25, fillStyle: u[k] });
            b(a)
        }
    })();
    (function() {
        var b = 1;
        n = function() { return n };
        n.setTimestep = function(d) { b = d };
        n.getTimestep = function() { return b };
        n.reCalc = function(d) {
            for (var f = [], g = j.length - 1; g > -1; g--) {
                var a = j[g],
                    h = (a.x - e.x) * (a.x - e.x) + (a.y - e.y) * (a.y - e.y);
                if (h <= e.r2) f.push(g);
                else {
                    var o = Math.atan2(a.y - e.y, a.x - e.x);
                    h = -6.673E-11 * e.m * a.m / h;
                    a.u += h * Math.cos(o) / a.m * b;
                    a.v += h * Math.sin(o) / a.m * b;
                    if (d === true) {
                        a.xpoints.push(a.x);
                        a.ypoints.push(a.y);
                        a.colors.push(Math.abs(a.initSpeed - Math.sqrt(a.u *
                            a.u + a.v * a.v)) < 0.1 ? "rgb(256, 256, 0)" : Math.sqrt(a.u * a.u + a.v * a.v) > a.initSpeed * 1.5 ? "rgb(256, 0, 0)" : Math.sqrt(a.u * a.u + a.v * a.v) > a.initSpeed ? "rgb(256, 128, 128)" : Math.sqrt(a.u * a.u + a.v * a.v) > a.initSpeed / 1.2 ? "rgb(64, 64, 256)" : "rgb(128, 256, 256)")
                    }
                    a.x += a.u * b;
                    a.y += a.v * b
                }
            }
            for (g = f.length - 1; g > -1; g--) j.splice(f[g], 1)
        }
    })();
    (function() {
        function b(c) {
            for (var s = 0, i = 0, l = d; l.tagName != "BODY";) {
                s += d.offsetTop;
                i += d.offsetLeft;
                l = l.offsetParent
            }
            m.setEarthMass(parseFloat(o.innerHTML));
            j.push(new r({
                x: parseInt(c.clientX -
                    i + window.pageXOffset),
                y: parseInt(c.clientY - s + window.pageYOffset),
                u: parseFloat($(a).slider("value")),
                v: parseFloat($(h).slider("value")),
                m: parseFloat($(f).slider("value"))
            }))
        }
        var d, f, g, a, h, o, u, t, k, v, w;
        p = function(c) {
            p.canvas = d = document.getElementById(c.canvas);
            f = document.getElementById(c.satmass);
            g = document.getElementById(c.earthmass);
            a = document.getElementById(c.initx);
            h = document.getElementById(c.inity);
            w = document.getElementById(c.timestep);
            o = document.getElementById(c.earthmasslbl);
            v = document.getElementById(c.timesteplbl);
            u = document.getElementById(c.satmasslbl);
            t = document.getElementById(c.initxlbl);
            k = document.getElementById(c.initylbl);
            o.innerHTML = c.defaultearthmass;
            v.innerHTML = c.defaulttimestep;
            u.innerHTML = c.defaultsatmass;
            t.innerHTML = c.defaultinitx;
            k.innerHTML = c.defaultinity;
            n.setTimestep(c.defaulttimestep);
            $(g).slider({
                slide: function(s, i) {
                    var l = parseFloat(100 /*i.value*/ );
                    o.innerHTML = l;
                    m.setEarthMass(l)
                },
                value: c.defaultearthmass,
                min: 1,
                max: 100,
                step: 1
            });
            $(w).slider({
                slide: function(s, i) {
                    var l = parseFloat(i.value);
                    v.innerHTML =
                        l;
                    n.setTimestep(l)
                },
                value: c.defaulttimestep,
                min: 0.01,
                max: 0.1,
                step: 0.01
            });
            $(f).slider({
                slide: function(s, i) {
                    var l = parseFloat(i.value);
                    u.innerHTML = l
                },
                value: c.defaultsatmass,
                min: 1,
                max: 30,
                step: 1
            });
            $(a).slider({ slide: function(s, i) { t.innerHTML = i.value }, value: c.defaultinitx, min: -3, max: 3, step: 0.5 });
            $(h).slider({ slide: function(s, i) { k.innerHTML = i.value }, value: c.defaultinity, min: -3, max: 3, step: 0.5 });
            $(f).val(c.defaultsatmass);
            $(g).val(c.defaultearthmass);
            $(a).val(c.defaultinitx);
            $(h).val(c.defaultinity);
            $(p.canvas).click(b);
            $("#RESET_INPUT").click(function() { j = [] });
            return p
        }
    })();
    (function() {
        r = function(b) {
            this.u = b.u;
            this.v = b.v;
            this.x = b.x;
            this.y = b.y;
            this.m = b.m;
            this.initSpeed = Math.sqrt(b.u * b.u + b.v * b.v);
            this.xpoints = [];
            this.ypoints = [];
            this.colors = [];
            this.c = b.c
        };
        r.prototype.draw = function() { q.drawSatellite({ x: this.x, y: this.y, radius: 3.75, strokeStyle: "#FFFFFF", fillStyle: "#FFFFFF", xpoints: this.xpoints, ypoints: this.ypoints, colors: this.colors, c: this.c }) }
    })();
    (function() {
        window.Orbits = m({
            renderer: { earthimg: "./images/earth.png" },
            physics: {},
            ui: { canvas: "CANVAS_BOARD", satmass: "SAT_MASS_INPUT", satmasslbl: "SAT_MASS_LBL", earthmass: "EARTH_MASS_INPUT", earthmasslbl: "EARTH_MASS_LBL", initx: "INIT_X_INPUT", initxlbl: "INIT_X_LBL", inity: "INIT_Y_INPUT", initylbl: "INIT_Y_LBL", timesteplbl: "TIME_STEP_LBL", timestep: "TIME_STEP_INPUT", defaultsatmass: 15, defaultearthmass: 100, defaultinitx: 0, defaultinity: 1.5, defaulttimestep: 0.01 },
            settings: { earth: { x: 450, y: 300, r: 10, r2: 100, m: 50 } }
        });
        setInterval(function() {
                q.redraw();
                for (var b = 30; b > -1; b--) n.reCalc();
                n.reCalc(true)
            },
            25);
        j.push(new r({ x: 450, y: 190, u: 1.5, v: 0, m: 25, c: "#FF0000" }));
        j.push(new r({ x: 450, y: 180, u: 1.5, v: 0, m: 25, c: "#FF0000" }));
        j.push(new r({ x: 450, y: 410, u: -1.5, v: 0, m: 25, c: "#FFFF00" }));
        j.push(new r({ x: 450, y: 400, u: -1.5, v: 0, m: 25, c: "#FFFF00" }));
        j.push(new r({ x: 340, y: 300, u: 0, v: 1.5, m: 25, c: "#FF00FF" }));
        j.push(new r({ x: 340, y: 290, u: 0, v: 1.5, m: 25, c: "#FF00FF" }));
        j.push(new r({ x: 560, y: 300, u: 0, v: -1.5, m: 25, c: "#00FFFF" }));
        j.push(new r({ x: 560, y: 290, u: 0, v: -1.5, m: 25, c: "#00FFFF" }))
    })()
})();